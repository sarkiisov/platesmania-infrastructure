apiVersion: v1
kind: ConfigMap
metadata:
  name: daemon-script
  namespace: default
data:
  check-and-restart.sh: |
    #!/bin/sh
    set -e

    check_and_restart() {
      DEPLOYMENT=$1

      echo "Run check for $DEPLOYMENT deployment"

      CURRENT_IMAGE=$(kubectl get deployment "$DEPLOYMENT" -o jsonpath='{.spec.template.spec.containers[0].image}')

      REPOSITORY=${CURRENT_IMAGE%%:*}
      TAG=${CURRENT_IMAGE##*:}

      CLUSTER_DIGEST=$(kubectl get pods -l app="$DEPLOYMENT" -o jsonpath='{.items[0].status.containerStatuses[0].imageID}' | sed 's|.*@||')
      REMOTE_DIGEST=$(curl -s "https://hub.docker.com/v2/repositories/"$REPOSITORY"/tags/"$TAG"" | \
        grep -o '"digest":"[^"]*"' | head -n1 | cut -d'"' -f4)

      if [ -z "$REMOTE_DIGEST" ]; then
        echo "Could not retrieve remote digest for $REPOSITORY:$TAG, skipping"
        return
      fi

      echo "Cluster digest: $CLUSTER_DIGEST"
      echo "Remote  digest: $REMOTE_DIGEST"

      if [ "$CLUSTER_DIGEST" != "$REMOTE_DIGEST" ]; then
        echo "Image digest has been changed for $DEPLOYMENT, restarting..."
        kubectl rollout restart deployment/"$DEPLOYMENT"
        kubectl annotate deployment "$DEPLOYMENT" image-digest="$CURRENT_IMAGE" --overwrite
      else
        echo "Digest has not been changed for $DEPLOYMENT, skipping"
      fi
    }

    check_and_restart frontend
    check_and_restart backend
